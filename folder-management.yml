openapi: 3.0.1
info:
  title: API
  description: Welcome to the API reference.
  version: 1.0.0 Beta
security:
- basicAuth: []
tags:
- name: folderManagement
  x-tf-resourceName: Folder
  description: Folder management API
paths:
  /v2/content/folders:
    post:
      x-tf-create: true
      summary: Create a new folder.
      description: Creates a new folder under the given parent folder.
      operationId: createFolder
      tags:
      - folderManagement
      parameters:
      - name: isAdminMode
        description: Set this to "true" if you want to perform the request as a Content Administrator.
        required: false
        in: header
        schema:
          type: string
      requestBody:
        description: Information about the new folder.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderDefinition'
      responses:
        200:
          description: The folder has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        default:
          description: The operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

  # /content/folders/global endpoint
  /v2/content/folders/global:
    get:
      summary: Get global folder.
      description: >-
        Schedule an asynchronous job to get global folder. Global folder contains all content items that a user
        has permissions to view in the organization.
      operationId: getGlobalFolderAsync
      tags:
      - folderManagement
      parameters:
      - name: isAdminMode
        description: Set this to "true" if you want to perform the request as a Content Administrator.
        required: false
        in: header
        schema:
          type: string
      responses:
        200:
          description: An asynchronous job to get a list of all content items been scheduled.
          content:
            application/json:
              schema:
                $ref: './generic-models.yml#/components/schemas/BeginAsyncJobResponse'
        default:
          description: The operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

  # /content/folders/global/{jobId}/status endpoint
  /v2/content/folders/globalStatus:
    get:
      summary: Global folder job status.
      description: >-
        Get the status of an asynchronous global folder job for the given job identifier.
      operationId: getGlobalFolderAsyncStatus
      tags:
      - folderManagement
      parameters:
      - name: jobId
        description: The identifier of the asynchronous global folder job.
        required: true
        in: path
        schema:
          type: string
      responses:
        200:
          description: Asynchronous global folder job status.
          content:
            application/json:
              schema:
                $ref: './generic-models.yml#/components/schemas/AsyncJobStatus'
        default:
          description: The operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /content/folders/global/{jobId}/result endpoint
  /v2/content/folders/globalResult:
    get:
      summary: Global folder job result.
      description: >-
        Get results from global folder job for the given job identifier.
      operationId: getGlobalFolderAsyncResult
      tags:
      - folderManagement
      parameters:
      - name: jobId
        description: The identifier of the asynchronous global folder job.
        required: true
        in: path
        schema:
          type: string
      responses:
        200:
          description: List of all content items with view permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentList'
        default:
          description: The operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

  # /content/folders/personal endpoint
  /v2/content/folders/personal:
    get:
      summary: Get personal folder.
      description: >-
        Get the personal folder of the current user.
      operationId: getPersonalFolder
      tags:
      - folderManagement
      responses:
        200:
          description: >
            The personal folder of the current user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        default:
          description: The operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

  # /content/folders/adminRecommended
  /v2/content/folders/adminRecommended:
    get:
      summary: Get Admin Recommended folder.
      description: >-
        Schedule an asynchronous job to get the top-level Admin Recommended content items.
      operationId: getAdminRecommendedFolderAsync
      tags:
      - folderManagement
      parameters:
      - name: isAdminMode
        description: Set this to "true" if you want to perform the request as a Content Administrator.
        required: false
        in: header
        schema:
          type: string
      responses:
        200:
          description: An asynchronous job to get the Admin Recommended folder has been scheduled.
          content:
            application/json:
              schema:
                $ref: './generic-models.yml#/components/schemas/BeginAsyncJobResponse'
        default:
          description: The operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /content/folders/adminRecommended/{jobId}/status endpoint
  /v2/content/folders/adminRecommendedStatus:
    get:
      summary: Admin Recommended folder job status.
      description: >-
        Get the status of an asynchronous Admin Recommended folder job for the given job identifier.
      operationId: getAdminRecommendedFolderAsyncStatus
      tags:
      - folderManagement
      parameters:
      - name: jobId
        description: The identifier of the asynchronous Admin Recommended folder job.
        required: true
        in: path
        schema:
          type: string
      responses:
        200:
          description: Asynchronous Admin Recommended folder job status.
          content:
            application/json:
              schema:
                $ref: './generic-models.yml#/components/schemas/AsyncJobStatus'
        default:
          description: The operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
  # /content/folders/adminRecommended/{jobId}/result endpoint
  /v2/content/folders/adminRecommendedResult:
    get:
      summary: Admin Recommended folder job result.
      description: >-
        Get results from Admin Recommended job for the given job identifier.
      operationId: getAdminRecommendedFolderAsyncResult
      tags:
      - folderManagement
      parameters:
      - name: jobId
        description: The identifier of the asynchronous Admin Recommended folder job.
        required: true
        in: path
        schema:
          type: string
      responses:
        200:
          description: Admin Recommended folder.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        default:
          description: The operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

  # /content/folders/{id} endpoint
  /v2/content/folders/folderId:
    get:
      x-tf-read: true
      summary: Get a folder.
      description: Get a folder with the given identifier.
      operationId: getFolder
      tags:
      - folderManagement
      parameters:
      - name: id
        description: Identifier of the folder to fetch.
        required: true
        in: path
        schema:
          type: string
      - name: isAdminMode
        description: Set this to "true" if you want to perform the request as a Content Administrator.
        required: false
        in: header
        schema:
          type: string
      responses:
        200:
          description: Folder that was requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        default:
          description: The operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    put:
      x-tf-update: true
      summary: Update a folder.
      description: Update an existing folder with the given identifier.
      operationId: updateFolder
      tags:
      - folderManagement
      parameters:
      - name: id
        description: Identifier of the folder to update.
        required: true
        in: path
        schema:
          type: string
      - name: isAdminMode
        description: Set this to "true" if you want to perform the request as a Content Administrator.
        required: false
        in: header
        schema:
          type: string
      requestBody:
        description: Information to update about the folder.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFolderRequest'
      responses:
        200:
          description: The folder was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        default:
          description: The operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    # /content/folders/{id}/delete
  /v2/content/folders/folderId/deleteFolder:
    delete:
      x-visibility: private
      x-tf-delete: true
      summary: Start a folder deletion job.
      description: >-
        Start an asynchronous folder deletion job with the given identifier.
      operationId: beginAsyncDelete
      tags:
      - folderManagement
      parameters:
      - name: id
        description: >-
          Identifier of the folder to delete. Identifiers from the Library in the Sumo user interface are provided
          in decimal format which is incompatible with this API. The identifier needs to be in hexadecimal format.
        required: true
        in: path
        schema:
          type: string
      - name: isAdminMode
        description: Set this to "true" if you want to perform the request as a Content Administrator.
        required: false
        in: header
        schema:
          type: string
      responses:
        200:
          description: Deletion job has been scheduled.
          content:
            application/json:
              schema:
                $ref: './generic-models.yml#/components/schemas/BeginAsyncJobResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    # /content/folders/{id}/delete/{jobId}/status
  /v2/content/folders/folderId/deleteFolderStatus:
    get:
      x-visibility: private
      summary: Folder deletion job status.
      description: >-
        Get the status of an asynchronous folder deletion job request for the given job identifier.
      operationId: getAsyncDeleteStatus
      tags:
      - folderManagement
      parameters:
      - name: id
        description: Identifier of the folder to delete.
        required: true
        in: path
        schema:
          type: string
      - name: jobId
        description: The identifier of the asynchronous job.
        required: true
        in: path
        schema:
          type: string
      - name: isAdminMode
        description: Set this to "true" if you want to perform the request as a Content Administrator.
        required: false
        in: header
        schema:
          type: string
      responses:
        200:
          description: The status of the folder deletion job.
          content:
            application/json:
              schema:
                $ref: './generic-models.yml#/components/schemas/AsyncJobStatus'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    # /content/folders/{id}/descendants
  /v2/content/folders/folderId/descendants:
    get:
      x-visibility: private
      summary: Get total descendant.
      description: Returns the total number of descendants of the specified folder.
      tags:
      - folderManagement
      operationId: getFolderNumDescendants
      parameters:
      - name: id
        description: Identifier of the folder.
        required: true
        in: path
        schema:
          type: string
      responses:
        200:
          description: Folder's descendant count.
          content:
            application/json:
              schema:
                type: integer
                format: int32
        default:
          description: The operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

components:
  schemas:
    FolderDefinition:
      x-tf-resource: true
      x-tf-object: Folder
      type: object
      required:
      - name
      - parentId
      properties:
        name:
          x-tfType: TypeString
          description: The name of the folder.
          type: string
          example: 'SampleFolder'
          minLength: 1
          maxLength: 128
        description:
          x-tfType: TypeString
          description: The description of the folder.
          type: string
          example: This is a sample folder.
          minLength: 0
          maxLength: 255
        parentId:
          x-tfType: TypeString
          description: The identifier of the parent folder.
          type: string
    Folder:
      allOf:
      - $ref: './generic-models.yml#/components/schemas/Content'
      - type: object
        properties:
          description:
            description: The description of the folder.
            type: string
            example: This is a sample folder.
            minLength: 0
            maxLength: 255
          children:
            description: A list of the content items.
            type: array
            items:
              $ref: './generic-models.yml#/components/schemas/Content'
    UpdateFolderRequest:
      type: object
      required:
      - name
      properties:
        name:
          description: The name of the folder.
          type: string
          example: 'SampleFolder'
          minLength: 1
          maxLength: 128
        description:
          description: The description of the folder.
          type: string
          example: This is a sample folder.
          minLength: 0
          maxLength: 255
    ContentList:
      type: object
      required:
      - data
      properties:
        data:
          description: A list of the content items.
          type: array
          items:
            $ref: './generic-models.yml#/components/schemas/Content'
