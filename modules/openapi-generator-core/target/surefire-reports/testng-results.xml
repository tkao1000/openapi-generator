<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="11" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="130" started-at="2019-08-29T17:40:00Z" finished-at="2019-08-29T17:40:00Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="130" started-at="2019-08-29T17:40:00Z" finished-at="2019-08-29T17:40:00Z">
      <class name="org.openapitools.codegen.validation.ValidatedTest">
        <test-method status="PASS" signature="isValidFalseForInvalidType()[pri:0, instance:org.openapitools.codegen.validation.ValidatedTest@32d992b2]" name="isValidFalseForInvalidType" duration-ms="4" started-at="2019-08-29T17:40:00Z" finished-at="2019-08-29T17:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidFalseForInvalidType -->
        <test-method status="PASS" signature="isValidTrueForValidType()[pri:0, instance:org.openapitools.codegen.validation.ValidatedTest@32d992b2]" name="isValidTrueForValidType" duration-ms="0" started-at="2019-08-29T17:40:00Z" finished-at="2019-08-29T17:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidTrueForValidType -->
      </class> <!-- org.openapitools.codegen.validation.ValidatedTest -->
      <class name="org.openapitools.codegen.validation.ValidationRuleTest">
        <test-method status="PASS" signature="createMethodUsingLambda()[pri:0, instance:org.openapitools.codegen.validation.ValidationRuleTest@1810399e]" name="createMethodUsingLambda" duration-ms="2" started-at="2019-08-29T17:40:00Z" finished-at="2019-08-29T17:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMethodUsingLambda -->
        <test-method status="PASS" signature="createMethodUsingMethodReference()[pri:0, instance:org.openapitools.codegen.validation.ValidationRuleTest@1810399e]" name="createMethodUsingMethodReference" duration-ms="1" started-at="2019-08-29T17:40:00Z" finished-at="2019-08-29T17:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMethodUsingMethodReference -->
      </class> <!-- org.openapitools.codegen.validation.ValidationRuleTest -->
      <class name="org.openapitools.codegen.config.WorkflowSettingsTest">
        <test-method status="PASS" signature="defaultValuesCanBeChangedBuilder()[pri:0, instance:org.openapitools.codegen.config.WorkflowSettingsTest@5f375618]" name="defaultValuesCanBeChangedBuilder" duration-ms="70" started-at="2019-08-29T17:40:00Z" finished-at="2019-08-29T17:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultValuesCanBeChangedBuilder -->
        <test-method status="PASS" signature="defaultValuesCanBeChangedClassConstructor()[pri:0, instance:org.openapitools.codegen.config.WorkflowSettingsTest@5f375618]" name="defaultValuesCanBeChangedClassConstructor" duration-ms="0" started-at="2019-08-29T17:40:00Z" finished-at="2019-08-29T17:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultValuesCanBeChangedClassConstructor -->
        <test-method status="PASS" signature="defaultValuesNotOverriddenByNulls()[pri:0, instance:org.openapitools.codegen.config.WorkflowSettingsTest@5f375618]" name="defaultValuesNotOverriddenByNulls" duration-ms="0" started-at="2019-08-29T17:40:00Z" finished-at="2019-08-29T17:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultValuesNotOverriddenByNulls -->
      </class> <!-- org.openapitools.codegen.config.WorkflowSettingsTest -->
      <class name="org.openapitools.codegen.validation.GenericValidatorTest">
        <test-method status="PASS" signature="testGenericValidatorErrorsAndWarnings()[pri:0, instance:org.openapitools.codegen.validation.GenericValidatorTest@215be6bb]" name="testGenericValidatorErrorsAndWarnings" duration-ms="18" started-at="2019-08-29T17:40:00Z" finished-at="2019-08-29T17:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenericValidatorErrorsAndWarnings -->
        <test-method status="PASS" signature="testGenericValidatorMultipleConditionsFail()[pri:0, instance:org.openapitools.codegen.validation.GenericValidatorTest@215be6bb]" name="testGenericValidatorMultipleConditionsFail" duration-ms="1" started-at="2019-08-29T17:40:00Z" finished-at="2019-08-29T17:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenericValidatorMultipleConditionsFail -->
        <test-method status="PASS" signature="testGenericValidatorSuccesses()[pri:0, instance:org.openapitools.codegen.validation.GenericValidatorTest@215be6bb]" name="testGenericValidatorSuccesses" duration-ms="1" started-at="2019-08-29T17:40:00Z" finished-at="2019-08-29T17:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenericValidatorSuccesses -->
        <test-method status="PASS" signature="testGenericValidatorSingleConditionFails()[pri:0, instance:org.openapitools.codegen.validation.GenericValidatorTest@215be6bb]" name="testGenericValidatorSingleConditionFails" duration-ms="0" started-at="2019-08-29T17:40:00Z" finished-at="2019-08-29T17:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenericValidatorSingleConditionFails -->
      </class> <!-- org.openapitools.codegen.validation.GenericValidatorTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
