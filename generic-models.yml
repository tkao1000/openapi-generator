components:
  schemas:
    Metadata:
      type: object
      required:
      - createdAt
      - createdBy
      - modifiedAt
      - modifiedBy
      properties:
        createdAt:
          description: >-
            Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
          type: string
          format: dateTime
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          type: string
          format: dateTime
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string

    MetadataModel:
      type: object
      required:
      - createdAt
      - createdBy
      - modifiedAt
      - modifiedBy
      properties:
        createdAt:
          description: >-
            Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
          type: string
          format: date-time
          example: 2018-10-16T09:10:00Z
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
          example: 0000000006743FDD
        modifiedAt:
          description: Last modification timestamp in UTC.
          type: string
          format: date-time
          example: 2018-10-16T09:10:00Z
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
          example: 0000000006743FE8

    UserInfo:
      type: object
      required:
      - id
      - email
      - firstName
      - lastName
      properties:
        id:
          description: User's identifier.
          type: string
          example: 0000000006743FDD
        email:
          description: User's email.
          type: string
          example: johndoe@acme.com
        firstName:
          description: User's first name.
          type: string
          example: John
        lastName:
          description: User's last name.
          type: string
          example: Doe

    MetadataWithUserInfo:
      type: object
      required:
      - createdAt
      - createdByUser
      - modifiedAt
      - modifiedByUser
      properties:
        createdAt:
          description: >-
            Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
          type: string
          format: date-time
          nullable: true
        createdByUser:
          description: Information about the user who created the resource.
          $ref: './generic-models.yml#/components/schemas/UserInfo'
        modifiedAt:
          description: Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
          type: string
          format: date-time
          nullable: true
        modifiedByUser:
          description: Information about the user who last modified the resource.
          $ref: './generic-models.yml#/components/schemas/UserInfo'

    BeginAsyncJobResponse:
      type: object
      required:
      - id
      properties:
        id:
          description: Identifier to get the status of an asynchronous job.
          type: string
          example: C03E086C137F38B4

    BulkBeginAsyncJobResponse:
      type: object
      required:
        - jobIds
        - errors
      properties:
        jobIds:
          description: Map of content identifiers to job identifiers.
          type: object
          additionalProperties:
            type: string
        errors:
          description: Map of content identifiers to error messages for all failed job requests
          type: object
          additionalProperties:
            $ref: './generic-models.yml#/components/schemas/BulkErrorResponse'

    BulkAsyncStatusResponse:
      type: object
      required:
        - jobStatuses
        - errors
      properties:
        jobStatuses:
          description: Map of job identifiers to job statuses.
          type: object
          additionalProperties:
            $ref: './generic-models.yml#/components/schemas/AsyncJobStatus'
        errors:
          description: Map of content identifiers to error messages for all failed job requests
          type: object
          additionalProperties:
            $ref: './generic-models.yml#/components/schemas/BulkErrorResponse'

    BulkErrorResponse:
      type: object
      required:
        - status
        - errorResponse
      properties:
        status:
          description: HTTP status code of individual request
          type: integer
        errorResponse:
          $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    AsyncJobStatus:
      type: object
      required:
      - status
      properties:
        status:
          description: >-
            Whether or not the request is in progress (`InProgress`), has completed successfully (`Success`), or has
            completed with an error (`Failed`).
          type: string
        statusMessage:
          description: >-
            Additional status message generated if the status is not `Failed`.
          type: string
        error:
          description: More information about the failure, if the status is `Failed`.
          $ref: './generic-responses.yml#/components/schemas/ErrorDescription'
      example:
        status: Success
        statusMessage: ''

  # TODO(vishal, 2018-09-29): Move it content-model.yml as this is only applicable to content mgmt APIs
    Content:
      type: object
      allOf:
      - $ref: './generic-models.yml#/components/schemas/MetadataModel'
      - required:
        - id
        - name
        - itemType
        - parentId
        - permissions
        properties:
          id:
            description: Identifier of the content item.
            type: string
            example: 000000000C1C17C6
          name:
            description: The name of the content item.
            type: string
            example: Personal
          itemType:
            description: >-
              Type of the content item. Supported values are:
                1. Folder
                2. Search
                3. Dashboard
            type: string
            example: Folder
          parentId:
            description: Identifier of the parent content item.
            type: string
            example: 0000000001C41EF2
          permissions:
            description: List of permissions the user has on the content item.
            type: array
            items:
              type: string
            example:
              - View
              - GrantView
              - Edit

    IdArray:
      type: array
      items:
        type: string

    ResolvableTimeRange:
      type: object
      required:
      - type
      properties:
        type:
          description: >-
            Type of the time range. Value must be either `CompleteLiteralTimeRange` or `BeginBoundedTimeRange`.
          type: string
      discriminator:
        propertyName: type

    CompleteLiteralTimeRange:
      allOf:
      - $ref: "#/components/schemas/ResolvableTimeRange"
      - type: object
        required:
        - rangeName
        properties:
          rangeName:
            description: >-
              Name of the complete time range. Possible values are:
              - `yesterday`,
              - `previous_week`,
              - `previous_month`.
            type: string
            example: previous_month

    BeginBoundedTimeRange:
      allOf:
      - $ref: "#/components/schemas/ResolvableTimeRange"
      - type: object
        required:
        - from
        properties:
          from:
            description: Starting boundary of the time range.
            type: object
            $ref: "#/components/schemas/TimeRangeBoundary"
          to:
            description: Ending boundary of the time range. If not set, the time range will end at the current moment.
            type: object
            $ref: "#/components/schemas/TimeRangeBoundary"

    TimeRangeBoundary:
      type: object
      required:
      - type
      properties:
        type:
          description: >-
            Type of the time range boundary. Value must be from list:
            - `RelativeTimeRangeBoundary`,
            - `EpochTimeRangeBoundary`,
            - `Iso8601TimeRangeBoundary`,
            - `LiteralTimeRangeBoundary`.
          type: string
      discriminator:

        propertyName: type

    RelativeTimeRangeBoundary:
      allOf:
      - $ref: "#/components/schemas/TimeRangeBoundary"
      - type: object
        required:
        - relativeTime
        properties:
          relativeTime:
            description: >-
              Relative time as a string consisting of following elements:
              - `-` (optional): minus sign indicates time in the past,
              - `<number>`: number of time units,
              - `<time_unit>`: time unit; possible values are: `w` (week), `d` (day), `h` (hour), `m` (minute), `s`
              (second).

              Multiple pairs of `<number><time_unit>` may be provided, and they may be in any order. For example,
              `-2w5d3h` points to the moment in time 2 weeks, 5 days and 3 hours ago.
            type: string
            example: -2w5d3h

    EpochTimeRangeBoundary:
      allOf:
      - $ref: "#/components/schemas/TimeRangeBoundary"
      - type: object
        required:
        - epochMillis
        properties:
          epochMillis:
            description: Starting point in time as a number of milliseconds since the epoch.
            type: integer
            format: int64
            example: 1538392220000

    Iso8601TimeRangeBoundary:
      allOf:
      - $ref: "#/components/schemas/TimeRangeBoundary"
      - type: object
        required:
        - iso8601Time
        properties:
          iso8601Time:
            description: Starting point in time as a string in ISO 8601 format.
            type: string
            format: date-time
            example: 2018-10-01T11:10:20.52+01:00

    LiteralTimeRangeBoundary:
      allOf:
      - $ref: "#/components/schemas/TimeRangeBoundary"
      - type: object
        required:
        - rangeName
        properties:
          rangeName:
            description: >-
              Name of the time range. Possible values are:
                - `now`,
                - `second`,
                - `minute`,
                - `hour`,
                - `day`,
                - `today`,
                - `week`,
                - `month`,
                - `year`
            type: string
            example: week
