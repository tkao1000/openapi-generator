openapi: 3.0.1
info:
  title: API
  description: Welcome to the API reference.
  version: 1.0.0 Beta
security:
- basicAuth: []
tags:
- name: userManagement
  description: User management API
paths:
  # /users endpoint
  users:
    get:
      summary: Get a list of users.
      description: >-
        Get a list of all users in the organization. The response is paginated with a default limit of 100 users per
        page.
      operationId: listUsers
      tags:
      - userManagement
      parameters:
      - name: limit
        description: >-
          Limit the number of users returned in the response. The number of users returned may be less than the `limit`.
        required: false
        in: query
        schema:
          default: 100
          minimum: 1
          type: integer
          maximum: 1000
          format: int32
      - name: token
        description: >-
          Continuation token to get the next page of results. A page object with the next continuation token is returned
          in the response body. Subsequent GET requests should specify the continuation token to get the next page of
          results. `token` is set to null when no more pages are left.
        required: false
        in: query
        schema:
          type: string
      - name: sortBy
        description: >-
          Sort the list of users by the `firstName`, `lastName`, or `email` field.
        required: false
        in: query
        schema:
          type: string
      - name: email
        description: Find user with the given email address.
        required: false
        in: query
        schema:
          minLength: 1
          type: string
      responses:
        200:
          description: A paginated list of users in the organization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserModelsResponse'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    post:
      x-tf-create: true
      x-tf-resourceName: User
      x-tf-path: v1/users
      summary: Create a new user.
      description: Create a new user in the organization.
      operationId: createUser
      tags:
      - userManagement
      parameters: []
      requestBody:
        description: Information about the new user.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDefinition'
      responses:
        200:
          description: The user has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

  # /users/{id} endpoint
  users/usersId:
    get:
      x-tf-read: true
      x-tf-resourceName: User
      x-tf-path: v1/users/%s
      summary: Get a user.
      description: Get a user with the given identifier from the organization.
      operationId: getUser
      tags:
      - userManagement
      parameters:
      - name: id
        description: Identifier of user to return.
        required: true
        in: path
        schema:
          type: string
      responses:
        200:
          description: User object that was requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    put:
      x-tf-update: true
      x-tf-resourceName: User
      x-tf-path: v1/users/%s
      summary: Update a user.
      description: >-
        Update an existing user in the organization.
      operationId: updateUser
      tags:
      - userManagement
      parameters:
      - name: id
        description: Identifier of the user to update.
        required: true
        in: path
        schema:
          type: string
      requestBody:
        description: Information to update about the user.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDefinition'
      responses:
        200:
          description: The user was successfully modified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    delete:
      x-tf-delete: true
      x-tf-resourceName: User
      x-tf-path: v1/users/%s
      summary: Delete a user.
      description: >-
        Delete a user with the given identifier from the organization and transfer their content to the user with the
        identifier specified in "transferTo". If "transferTo" is not specified the contents are deleted.
      operationId: deleteUser
      tags:
      - userManagement
      parameters:
      - name: id
        description: Identifier of the user to delete.
        required: true
        in: path
        schema:
          type: string
      - name: transferTo
        description: Identifier of the user to receive the transfer of content from the deleted user.
        required: false
        in: query
        schema:
          type: string
      responses:
        204:
          description: User was deleted successfully.
        default:
          description: Operation failed with an error.
          content:
            application/json:
              schema:
                $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    # /users/{id}/password/reset endpoint.
    password:
      reset:
        post:
          summary: Reset password.
          description: Reset a user's password.
          operationId: resetPassword
          tags:
          - userManagement
          parameters:
          - name: id
            description: Identifier of the user to reset password.
            required: true
            in: path
            schema:
              type: string
          responses:
            204:
              description: User's password was reset successfully.
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'
    unlock:
      post:
        summary: Unlock a user.
        description: Unlock another user's account.
        operationId: unlockUser
        tags:
        - userManagement
        parameters:
        - name: id
          description: The id of the user that needs to be unlocked.
          required: true
          in: path
          schema:
            type: string
        responses:
          204:
            description: User's account was unlocked successfully.
          default:
            description: Operation failed with an error.
            content:
              application/json:
                schema:
                  $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

    # /users/{id}/email/requestChange endpoint.
    email:
      requestChange:
        post:
          summary: Change email address.
          description: >-
            An email with an activation link is sent to the userâ€™s new email address. The user must click the link in
            the email within seven days to complete the email address change, or the link will expire.
          operationId: requestChangeEmail
          tags:
          - userManagement
          parameters:
          - name: id
            description: Identifier of the user to change email address.
            required: true
            in: path
            schema:
              type: string
          requestBody:
            description: New email address of the user.
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ChangeEmailRequest'
          responses:
            204:
              description: Email change request was submitted successfully.
            default:
              description: Operation failed with an error.
              content:
                application/json:
                  schema:
                    $ref: './generic-responses.yml#/components/schemas/ErrorResponse'

components:
  schemas:
    CreateUserDefinition:
      type: object
      required:
      - firstName
      - lastName
      - email
      - roleIds
      properties:
        firstName:
          x-tfType: TypeString
          description: First name of the user.
          type: string
          example: 'John'
          minLength: 1
          maxLength: 128
        lastName:
          x-tfType: TypeString
          description: Last name of the user.
          type: string
          example: 'Doe'
          minLength: 0
          maxLength: 128
        email:
          x-tfType: TypeString
          x-tf-resource-writeonly: true
          description: Email address of the user.
          type: string
          format: email
          example: 'johndoe@acme.com'
          maxLength: 255
        roleIds:
          x-tfType: TypeList
          description: List of roleIds associated with the user.
          type: array
          items:
            type: string
          example:
          - 00000000000001DF
          - 00000000000002D2
    UpdateUserDefinition:
      type: object
      required:
      - firstName
      - lastName
      - isActive
      - roleIds
      properties:
        firstName:
          description: First name of the user.
          type: string
          example: 'John'
          minLength: 1
          maxLength: 128
        lastName:
          description: Last name of the user.
          type: string
          example: 'Doe'
          minLength: 0
          maxLength: 128
        isActive:
          description: This has the value `true` if the user is active and `false` if they have been deactivated.
          type: boolean
          example: true
        roleIds:
          description: List of role identifiers associated with the user.
          type: array
          items:
            type: string
          example:
          - 00000000000001DF
          - 00000000000002D2
    User:
      x-tf-resource: true
      x-tf-object: User
      type: object
      allOf:
      - $ref: '#/components/schemas/CreateUserDefinition'
      - $ref: './generic-models.yml#/components/schemas/MetadataModel'
      - required:
        - id
        properties:
          id:
            description: Unique identifier for the user.
            type: string
            example: 000000000FE20FE2
            x-tf-resource-readonly: true
          isActive:
            description: True if the user is active.
            type: boolean
            example: true
            x-tfType: TypeBool
          isLocked:
            description: >-
              This has the value `true` if the user's account has been locked. If a user tries to log into their account
              several times and fails, his or her account will be locked for security reasons.
            type: boolean
            example: false
            x-tf-resource-readonly: true
          isMfaEnabled:
            description: True if multi factor authentication is enabled for the user.
            type: boolean
            example: false
            x-tf-resource-readonly: true
          lastLoginTimestamp:
            description: Timestamp of the last login for the user in UTC. Will be null if the user has never logged in.
            type: string
            format: date-time
            x-tf-resource-readonly: true
    ListUserModelsResponse:
      type: object
      required:
      - data
      properties:
        data:
          description: List of users.
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
        next:
          description: Next continuation token.
          type: string
          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
    ChangeEmailRequest:
      type: object
      required:
      - email
      properties:
        email:
          description: New email address of the user.
          type: string
          format: email
          example: 'johndoe@acme.com'
          maxLength: 255