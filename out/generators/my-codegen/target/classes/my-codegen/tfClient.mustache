package sumologic

import (
    "encoding/json"
    "fmt"
{{#imports}}
    "{{import}}"
{{/imports}}
)
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}
{{#vendorExtensions.x-tf-read}}
func (s *Client) Get{{vendorExtensions.x-tf-resourceName}}(id string) (*{{vendorExtensions.x-tf-resourceName}}, error) {
   data, _, err := s.Get(fmt.Sprintf("{{vendorExtensions.x-tf-path}}", id))
   if err != nil {
       return nil, err
   }
   if data == nil {
       return nil, nil
   }

   var {{#lambda.camelcase}}{{{vendorExtensions.x-tf-resourceName}}}{{/lambda.camelcase}} {{{vendorExtensions.x-tf-resourceName}}}
   err = json.Unmarshal(data, &{{#lambda.camelcase}}{{{vendorExtensions.x-tf-resourceName}}}{{/lambda.camelcase}})
   if err != nil {
       return nil, err
   }
   return &{{#lambda.camelcase}}{{{vendorExtensions.x-tf-resourceName}}}{{/lambda.camelcase}}, nil
}
{{/vendorExtensions.x-tf-read}}

{{#vendorExtensions.x-tf-delete}}
func (s *Client) Delete{{vendorExtensions.x-tf-resourceName}}(id string) error {
    _, err := s.Delete(fmt.Sprintf("{{vendorExtensions.x-tf-path}}", id))
    return err
}
{{/vendorExtensions.x-tf-delete}}

{{#vendorExtensions.x-tf-create}}
func (s *Client) Create{{vendorExtensions.x-tf-resourceName}}({{#lambda.camelcase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.camelcase}} {{vendorExtensions.x-tf-resourceName}}) (string, error) {
    data, err := s.Post("{{vendorExtensions.x-tf-path}}", {{#lambda.camelcase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.camelcase}})
    if err != nil {
        return "", err
    }

    var created{{#lambda.camelcase}}{{{vendorExtensions.x-tf-resourceName}}}{{/lambda.camelcase}} {{{vendorExtensions.x-tf-resourceName}}}
    err = json.Unmarshal(data, &created{{#lambda.camelcase}}{{{vendorExtensions.x-tf-resourceName}}}{{/lambda.camelcase}})
    if err != nil {
        return "", err
    }

    return created{{#lambda.camelcase}}{{{vendorExtensions.x-tf-resourceName}}}{{/lambda.camelcase}}.ID, nil
}
{{/vendorExtensions.x-tf-create}}

{{#vendorExtensions.x-tf-update}}
func (s *Client) Update{{vendorExtensions.x-tf-resourceName}}({{#lambda.camelcase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.camelcase}} {{vendorExtensions.x-tf-resourceName}}) error {
    url := fmt.Sprintf("{{vendorExtensions.x-tf-path}}", {{#lambda.camelcase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.camelcase}}.ID)

{{#models}}
{{#model}}
{{#vendorExtensions.x-tf-resource}}
    {{#lambda.camelcase}}{{classname}}{{/lambda.camelcase}}.ID = ""
    {{#vars}}
    {{#vendorExtensions.x-tf-resource-writeonly}}
    {{#lambda.camelcase}}{{classname}}{{/lambda.camelcase}}.{{nameInCamelCase}} = ""
    {{/vendorExtensions.x-tf-resource-writeonly}}
    {{/vars}}
{{/vendorExtensions.x-tf-resource}}
{{/model}}
{{/models}}

    _, err := s.Put(url, {{#lambda.camelcase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.camelcase}})
    return err
}
{{/vendorExtensions.x-tf-update}}{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}
// models
{{#models}}
{{#model}}
{{#vendorExtensions.x-tf-resource}}
  {{#apiInfo}}
    {{#apis}}
      {{#operations}}
        {{#operation}}
          {{#vendorExtensions.x-tf-create}}
type {{vendorExtensions.x-tf-resourceName}} struct {
          {{/vendorExtensions.x-tf-create}}
        {{/operation}}
      {{/operations}}
    {{/apis}}
  {{/apiInfo}}
    ID        string   `json:"id,omitempty"`
{{#vars}}
  {{^vendorExtensions.x-tf-resource-readonly}}
    {{#description}}
    // {{{description}}}
    {{/description}}
    {{nameInCamelCase}} {{^isEnum}}{{^isPrimitiveType}}{{^isContainer}}{{^isDateTime}}{{^isBoolean}}*{{/isBoolean}}{{/isDateTime}}{{/isContainer}}{{/isPrimitiveType}}{{/isEnum}} {{dataType}}{{#isListContainer}}{{items.dataType}}{{/isListContainer}}{{#isMapContainer}}{{items.dataType}}{{/isMapContainer}} `json:"{{baseName}}{{^required}},omitempty{{/required}}"{{#withXml}} xml:"{{baseName}}"{{/withXml}}`
  {{/vendorExtensions.x-tf-resource-readonly}}
  {{/vars}}
}
{{/vendorExtensions.x-tf-resource}}
{{/model}}
{{/models}}
