// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Sumo Logic and manual
//     changes will be clobbered when the file is regenerated. Do not submit
//     changes to this file.
//
// ----------------------------------------------------------------------------\
package sumologic

import (
	"fmt"
	"testing"
  "strconv"
  "strings"
	"github.com/hashicorp/terraform/helper/resource"
	"github.com/hashicorp/terraform/terraform"
)

{{#apiInfo}}
  {{#apis}}
    {{#operations}}
      {{#operation}}
{{#vendorExtensions.x-tf-create}}
func TestAcc{{vendorExtensions.x-tf-resourceName}}Create(t *testing.T) {
        var {{#lambda.lowercase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.lowercase}} {{vendorExtensions.x-tf-resourceName}}
        {{#models}}
          {{#model}}
            {{#vendorExtensions.x-tf-resource}}
            {{#vars}}
              {{^vendorExtensions.x-tf-resource-readonly}}
                {{^vendorExtensions.x-tf-hideFromTfFile}}
        test{{nameInCamelCase}}{{#isBoolean}}, _{{/isBoolean}}{{#isLong}}, _{{/isLong}}{{#isInteger}}, _{{/isInteger}} := {{#isString}}FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["{{name}}"]{{/isString}}{{#isDateTime}}FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["{{name}}"]{{/isDateTime}}{{#isBoolean}}strconv.ParseBool(FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["{{name}}"]){{/isBoolean}}{{#isListContainer}}[]string{"\"" + FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["{{name}}"] + "\""}{{/isListContainer}}{{#isLong}}strconv.Atoi(FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["{{name}}"]){{/isLong}}{{#isInteger}}strconv.Atoi(FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["{{name}}"]){{/isInteger}}
                {{/vendorExtensions.x-tf-hideFromTfFile}}
              {{/vendorExtensions.x-tf-resource-readonly}}
              {{/vars}}
            {{/vendorExtensions.x-tf-resource}}
          {{/model}}
        {{/models}}
        resource.Test(t, resource.TestCase{
                PreCheck: func() { TestAccPreCheck(t) },
                Providers:    testAccProviders,
                CheckDestroy: testAccCheck{{vendorExtensions.x-tf-resourceName}}Destroy({{#lambda.lowercase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.lowercase}}),
                Steps: []resource.TestStep{
                        {
                                Config: testAccSumologic{{vendorExtensions.x-tf-resourceName}}({{#lambda.joinWithComma}}{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{#vars}}{{^vendorExtensions.x-tf-resource-readonly}}{{^vendorExtensions.x-tf-hideFromTfFile}}test{{nameInCamelCase}}  {{/vendorExtensions.x-tf-hideFromTfFile}}{{/vendorExtensions.x-tf-resource-readonly}}{{/vars}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}{{/lambda.joinWithComma}}),
                                Check: resource.ComposeTestCheckFunc(
                                        testAccCheck{{vendorExtensions.x-tf-resourceName}}Exists("sumologic_{{#lambda.snakecase}}{{#lambda.camelcase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.camelcase}}{{/lambda.snakecase}}.test", &{{#lambda.lowercase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.lowercase}}, t),
                                        testAccCheck{{vendorExtensions.x-tf-resourceName}}Attributes("sumologic_{{#lambda.snakecase}}{{#lambda.camelcase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.camelcase}}{{/lambda.snakecase}}.test"),
                                        {{#models}}
                                          {{#model}}
                                            {{#vendorExtensions.x-tf-resource}}
                                            {{#vars}}
                                              {{^vendorExtensions.x-tf-resource-readonly}}
                                                {{^vendorExtensions.x-tf-hideFromTfFile}}
                                        resource.TestCheckResourceAttr("sumologic_{{#lambda.snakecase}}{{#lambda.camelcase}}{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}{{/lambda.camelcase}}{{/lambda.snakecase}}.test", "{{#lambda.lowercase}}{{nameInSnakeCase}}{{/lambda.lowercase}}{{#isListContainer}}.0{{/isListContainer}}", {{#isBoolean}}strconv.FormatBool(test{{nameInCamelCase}}){{/isBoolean}}{{^isBoolean}}{{#isString}}test{{nameInCamelCase}}{{/isString}}{{#isDateTime}}test{{nameInCamelCase}}{{/isDateTime}}{{/isBoolean}}{{#isListContainer}}strings.Replace(test{{nameInCamelCase}}[0], "\"", "", 2){{/isListContainer}}{{#isLong}}strconv.FormatInt(int64(test{{nameInCamelCase}}), 10){{/isLong}}{{#isInteger}}strconv.FormatInt(int64(test{{nameInCamelCase}}), 10){{/isInteger}}),
                                                {{/vendorExtensions.x-tf-hideFromTfFile}}
                                              {{/vendorExtensions.x-tf-resource-readonly}}
                                            {{/vars}}
                                            {{/vendorExtensions.x-tf-resource}}
                                          {{/model}}
                                        {{/models}}
                                ),
                        },
                },
        })
}
{{/vendorExtensions.x-tf-create}}

{{#vendorExtensions.x-tf-update}}
func TestAcc{{vendorExtensions.x-tf-resourceName}}Update(t *testing.T) {
  var {{#lambda.lowercase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.lowercase}} {{vendorExtensions.x-tf-resourceName}}
{{#models}}
  {{#model}}
    {{#vendorExtensions.x-tf-resource}}
      {{#vars}}
        {{^vendorExtensions.x-tf-resource-readonly}}
          {{^vendorExtensions.x-tf-hideFromTfFile}}
            test{{nameInCamelCase}}{{#isBoolean}}, _{{/isBoolean}}{{#isLong}}, _{{/isLong}}{{#isInteger}}, _{{/isInteger}} := {{#isString}}FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["{{name}}"]{{/isString}}{{#isDateTime}}FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["{{name}}"]{{/isDateTime}}{{#isBoolean}}strconv.ParseBool(FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["{{name}}"]){{/isBoolean}}{{#isListContainer}}[]string{"\"" + FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["{{name}}"] + "\""}{{/isListContainer}}{{#isLong}}strconv.Atoi(FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["{{name}}"]){{/isLong}}{{#isInteger}}strconv.Atoi(FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["{{name}}"]){{/isInteger}}
          {{/vendorExtensions.x-tf-hideFromTfFile}}
        {{/vendorExtensions.x-tf-resource-readonly}}
      {{/vars}}
    {{/vendorExtensions.x-tf-resource}}
  {{/model}}
{{/models}}

{{#models}}
  {{#model}}
    {{#vendorExtensions.x-tf-resource}}
      {{#vars}}
        {{^vendorExtensions.x-tf-resource-readonly}}
          {{^vendorExtensions.x-tf-hideFromTfFile}}
          testUpdated{{nameInCamelCase}}{{#isBoolean}}, _{{/isBoolean}}{{#isLong}}, _{{/isLong}}{{#isInteger}}, _{{/isInteger}} := {{#isString}}FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["updated{{nameInCamelCase}}"]{{/isString}}{{#isDateTime}}FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["updated{{nameInCamelCase}}"]{{/isDateTime}}{{#isBoolean}}strconv.ParseBool(FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["updated{{nameInCamelCase}}"]){{/isBoolean}}{{#isListContainer}}[]string{"\"" + FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["updated{{nameInCamelCase}}"] + "\""}{{/isListContainer}}{{#isLong}}strconv.Atoi(FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["updated{{nameInCamelCase}}"]){{/isLong}}{{#isInteger}}strconv.Atoi(FieldsMap["{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}"]["updated{{nameInCamelCase}}"]){{/isInteger}}
          {{/vendorExtensions.x-tf-hideFromTfFile}}
        {{/vendorExtensions.x-tf-resource-readonly}}
      {{/vars}}
    {{/vendorExtensions.x-tf-resource}}
  {{/model}}
{{/models}}

	resource.Test(t, resource.TestCase{
		PreCheck: func() { TestAccPreCheck(t) },
		Providers:    testAccProviders,
		CheckDestroy: testAccCheck{{vendorExtensions.x-tf-resourceName}}Destroy({{#lambda.lowercase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.lowercase}}),
		Steps: []resource.TestStep{
			{
				Config: testAccSumologic{{vendorExtensions.x-tf-resourceName}}({{#lambda.joinWithComma}}{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{#vars}}{{^vendorExtensions.x-tf-resource-readonly}}{{^vendorExtensions.x-tf-hideFromTfFile}}test{{nameInCamelCase}}  {{/vendorExtensions.x-tf-hideFromTfFile}}{{/vendorExtensions.x-tf-resource-readonly}}{{/vars}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}{{/lambda.joinWithComma}}),
				Check: resource.ComposeTestCheckFunc(
					testAccCheck{{vendorExtensions.x-tf-resourceName}}Exists("sumologic_{{#lambda.snakecase}}{{#lambda.camelcase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.camelcase}}{{/lambda.snakecase}}.test", &{{#lambda.lowercase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.lowercase}}, t),
					testAccCheck{{vendorExtensions.x-tf-resourceName}}Attributes("sumologic_{{#lambda.snakecase}}{{#lambda.camelcase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.camelcase}}{{/lambda.snakecase}}.test"),
{{#models}}
  {{#model}}
    {{#vendorExtensions.x-tf-resource}}
      {{#vars}}
        {{^vendorExtensions.x-tf-resource-readonly}}
          {{^vendorExtensions.x-tf-hideFromTfFile}}
          resource.TestCheckResourceAttr("sumologic_{{#lambda.snakecase}}{{#lambda.camelcase}}{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}{{/lambda.camelcase}}{{/lambda.snakecase}}.test", "{{#lambda.lowercase}}{{nameInSnakeCase}}{{/lambda.lowercase}}{{#isListContainer}}.0{{/isListContainer}}", {{#isBoolean}}strconv.FormatBool(test{{nameInCamelCase}}){{/isBoolean}}{{^isBoolean}}{{#isString}}test{{nameInCamelCase}}{{/isString}}{{#isDateTime}}test{{nameInCamelCase}}{{/isDateTime}}{{/isBoolean}}{{#isListContainer}}strings.Replace(test{{nameInCamelCase}}[0], "\"", "", 2){{/isListContainer}}{{#isLong}}strconv.FormatInt(int64(test{{nameInCamelCase}}), 10){{/isLong}}{{#isInteger}}strconv.FormatInt(int64(test{{nameInCamelCase}}), 10){{/isInteger}}),
          {{/vendorExtensions.x-tf-hideFromTfFile}}
        {{/vendorExtensions.x-tf-resource-readonly}}
      {{/vars}}
    {{/vendorExtensions.x-tf-resource}}
  {{/model}}
{{/models}}
				),
			},
			{
				Config: testAccSumologic{{vendorExtensions.x-tf-resourceName}}Update({{#lambda.joinWithComma}}{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{#vars}}{{^vendorExtensions.x-tf-resource-readonly}}{{^vendorExtensions.x-tf-hideFromTfFile}}testUpdated{{nameInCamelCase}}  {{/vendorExtensions.x-tf-hideFromTfFile}}{{/vendorExtensions.x-tf-resource-readonly}}{{/vars}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}{{/lambda.joinWithComma}}),
				Check: resource.ComposeTestCheckFunc(
					testAccCheck{{vendorExtensions.x-tf-resourceName}}Exists("sumologic_{{#lambda.snakecase}}{{#lambda.camelcase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.camelcase}}{{/lambda.snakecase}}.test", &{{#lambda.lowercase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.lowercase}}, t),
					testAccCheck{{vendorExtensions.x-tf-resourceName}}Attributes("sumologic_{{#lambda.snakecase}}{{#lambda.camelcase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.camelcase}}{{/lambda.snakecase}}.test"),
{{#models}}
  {{#model}}
    {{#vendorExtensions.x-tf-resource}}
      {{#vars}}
        {{^vendorExtensions.x-tf-resource-readonly}}
          {{^vendorExtensions.x-tf-hideFromTfFile}}
          resource.TestCheckResourceAttr("sumologic_{{#lambda.snakecase}}{{#lambda.camelcase}}{{#models}}{{#model}}{{#vendorExtensions.x-tf-resource}}{{vendorExtensions.x-tf-object}}{{/vendorExtensions.x-tf-resource}}{{/model}}{{/models}}{{/lambda.camelcase}}{{/lambda.snakecase}}.test", "{{#lambda.lowercase}}{{nameInSnakeCase}}{{/lambda.lowercase}}{{#isListContainer}}.0{{/isListContainer}}", {{#isBoolean}}strconv.FormatBool(testUpdated{{nameInCamelCase}}){{/isBoolean}}{{^isBoolean}}{{#isString}}testUpdated{{nameInCamelCase}}{{/isString}}{{#isDateTime}}testUpdated{{nameInCamelCase}}{{/isDateTime}}{{/isBoolean}}{{#isListContainer}}strings.Replace(testUpdated{{nameInCamelCase}}[0], "\"", "", 2){{/isListContainer}}{{#isLong}}strconv.FormatInt(int64(testUpdated{{nameInCamelCase}}), 10){{/isLong}}{{#isInteger}}strconv.FormatInt(int64(testUpdated{{nameInCamelCase}}), 10){{/isInteger}}),
          {{/vendorExtensions.x-tf-hideFromTfFile}}
        {{/vendorExtensions.x-tf-resource-readonly}}
      {{/vars}}
    {{/vendorExtensions.x-tf-resource}}
  {{/model}}
{{/models}}
				),
			},
		},
	})
}
{{/vendorExtensions.x-tf-update}}

{{#vendorExtensions.x-tf-read}}
func testAccCheck{{vendorExtensions.x-tf-resourceName}}Exists(name string, {{#lambda.lowercase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.lowercase}} *{{vendorExtensions.x-tf-resourceName}}, t *testing.T) resource.TestCheckFunc {
	return func(s *terraform.State) error {
		rs, ok := s.RootModule().Resources[name]
		if !ok {
      //need this so that we don't get an unused import error for strconv in some cases
			return fmt.Errorf("Error = %s. {{vendorExtensions.x-tf-resourceName}} not found: %s", strconv.FormatBool(ok), name)
		}

    //need this so that we don't get an unused import error for strings in some cases
		if strings.EqualFold(rs.Primary.ID, "") {
			return fmt.Errorf("{{vendorExtensions.x-tf-resourceName}} ID is not set")
		}

		id := rs.Primary.ID
		c := testAccProvider.Meta().(*Client)
		new{{vendorExtensions.x-tf-resourceName}}, err := c.Get{{vendorExtensions.x-tf-resourceName}}(id)
		if err != nil {
			return fmt.Errorf("{{vendorExtensions.x-tf-resourceName}} %s not found", id)
		}
		{{#lambda.lowercase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.lowercase}} = new{{vendorExtensions.x-tf-resourceName}}
		return nil
	}
}
{{/vendorExtensions.x-tf-read}}

{{#vendorExtensions.x-tf-delete}}
func testAccCheck{{vendorExtensions.x-tf-resourceName}}Destroy({{#lambda.lowercase}}{{vendorExtensions.x-tf-resourceName}}{{/lambda.lowercase}} {{vendorExtensions.x-tf-resourceName}}) resource.TestCheckFunc {
	return func(s *terraform.State) error {
		client := testAccProvider.Meta().(*Client)
    for _, r := range s.RootModule().Resources {
      id := r.Primary.ID
		  u, err := client.Get{{vendorExtensions.x-tf-resourceName}}(id)
		  if err != nil {
        return fmt.Errorf("Encountered an error: " + err.Error())
		  }
      if u != nil {
        return fmt.Errorf("{{vendorExtensions.x-tf-resourceName}} still exists")
      }
    }
		return nil
	}
}
{{/vendorExtensions.x-tf-delete}}

      {{/operation}}
    {{/operations}}
  {{/apis}}
{{/apiInfo}}
{{#models}}
  {{#model}}
    {{#vendorExtensions.x-tf-resource}}
func testAccSumologic{{vendorExtensions.x-tf-object}}({{#lambda.joinWithComma}}{{#vars}}{{^vendorExtensions.x-tf-resource-readonly}}{{^vendorExtensions.x-tf-hideFromTfFile}}{{name}} {{#isString}}string{{/isString}}{{#isDateTime}}string{{/isDateTime}}{{#isBoolean}}bool{{/isBoolean}}{{#isListContainer}}[]string{{/isListContainer}}{{#isLong}}int{{/isLong}}{{#isInteger}}int{{/isInteger}}  {{/vendorExtensions.x-tf-hideFromTfFile}}{{/vendorExtensions.x-tf-resource-readonly}}{{/vars}}{{/lambda.joinWithComma}}) string {
	return fmt.Sprintf(`
resource "sumologic_{{#lambda.snakecase}}{{#lambda.camelcase}}{{vendorExtensions.x-tf-object}}{{/lambda.camelcase}}{{/lambda.snakecase}}" "test" {
{{#vars}}
  {{^vendorExtensions.x-tf-resource-readonly}}
    {{^vendorExtensions.x-tf-hideFromTfFile}}
    {{#lambda.lowercase}}{{nameInSnakeCase}}{{/lambda.lowercase}} = {{#isString}}"%s"{{/isString}}{{#isDateTime}}"%s"{{/isDateTime}}{{#isBoolean}}%t{{/isBoolean}}{{#isListContainer}}%v{{/isListContainer}}{{#isLong}}%d{{/isLong}}{{#isInteger}}%d{{/isInteger}}
    {{/vendorExtensions.x-tf-hideFromTfFile}}
  {{/vendorExtensions.x-tf-resource-readonly}}
{{/vars}}
}
`{{#vendorExtensions.x-tf-resource}}{{#vars}}{{^vendorExtensions.x-tf-resource-readonly}}{{^vendorExtensions.x-tf-hideFromTfFile}}, {{name}}{{/vendorExtensions.x-tf-hideFromTfFile}}{{/vendorExtensions.x-tf-resource-readonly}}{{/vars}}{{/vendorExtensions.x-tf-resource}})
}

func testAccSumologic{{vendorExtensions.x-tf-object}}Update({{#lambda.joinWithComma}}{{#vars}}{{^vendorExtensions.x-tf-resource-readonly}}{{^vendorExtensions.x-tf-hideFromTfFile}}{{name}} {{#isString}}string{{/isString}}{{#isDateTime}}string{{/isDateTime}}{{#isBoolean}}bool{{/isBoolean}}{{#isListContainer}}[]string{{/isListContainer}}{{#isLong}}int{{/isLong}}{{#isInteger}}int{{/isInteger}}  {{/vendorExtensions.x-tf-hideFromTfFile}}{{/vendorExtensions.x-tf-resource-readonly}}{{/vars}}{{/lambda.joinWithComma}}) string {
	return fmt.Sprintf(`
resource "sumologic_{{#lambda.snakecase}}{{#lambda.camelcase}}{{vendorExtensions.x-tf-object}}{{/lambda.camelcase}}{{/lambda.snakecase}}" "test" {
  {{#vars}}
    {{^vendorExtensions.x-tf-resource-readonly}}
      {{^vendorExtensions.x-tf-hideFromTfFile}}
      {{#lambda.lowercase}}{{nameInSnakeCase}}{{/lambda.lowercase}} = {{#isString}}"%s"{{/isString}}{{#isDateTime}}"%s"{{/isDateTime}}{{#isBoolean}}%t{{/isBoolean}}{{#isListContainer}}%v{{/isListContainer}}{{#isLong}}%d{{/isLong}}{{#isInteger}}%d{{/isInteger}}
      {{/vendorExtensions.x-tf-hideFromTfFile}}
    {{/vendorExtensions.x-tf-resource-readonly}}
  {{/vars}}
}
`{{#vars}}{{^vendorExtensions.x-tf-resource-readonly}}{{^vendorExtensions.x-tf-hideFromTfFile}}, {{name}}{{/vendorExtensions.x-tf-hideFromTfFile}}{{/vendorExtensions.x-tf-resource-readonly}}{{/vars}})
}
    {{/vendorExtensions.x-tf-resource}}

    {{#vendorExtensions.x-tf-resource}}
func testAccCheck{{vendorExtensions.x-tf-object}}Attributes(name string) resource.TestCheckFunc {
  return func(s *terraform.State) error {
      f := resource.ComposeTestCheckFunc(
        {{#vars}}
          {{^vendorExtensions.x-tf-resource-readonly}}
            {{^vendorExtensions.x-tf-hideFromTfFile}}
            {{^isListContainer}}
        resource.TestCheckResourceAttrSet(name, "{{#lambda.lowercase}}{{nameInSnakeCase}}{{/lambda.lowercase}}"),
            {{/isListContainer}}
            {{/vendorExtensions.x-tf-hideFromTfFile}}
          {{/vendorExtensions.x-tf-resource-readonly}}
        {{/vars}}
      )
      return f(s)
   }
}
    {{/vendorExtensions.x-tf-resource}}
  {{/model}}
{{/models}}