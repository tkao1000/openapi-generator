openapi: 3.0.1
info:
  description: Welcome to the API reference.
  title: API
  version: 1.0.0 Beta
servers:
- url: /
security:
- basicAuth: []
tags:
- description: User management API
  name: userManagement
paths:
  /v1beta/users:
    post:
      description: Create a new user in the organization.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDefinition'
        description: Information about the new user.
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: The user has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new user.
      tags:
      - userManagement
      x-tf-create: true
  /v1beta/users/{id}:
    delete:
      description: |
        Delete a user with the given identifier from the organization and transfer their content to the user with the identifier specified in "transferTo". If "transferTo" is not specified the contents are deleted.
      operationId: deleteUser
      parameters:
      - description: Identifier of the user to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the user to transfer the content from the deleted
          user.
        explode: true
        in: query
        name: transferTo
        required: false
        schema:
          type: string
        style: form
      responses:
        204:
          content: {}
          description: User was deleted successfully.
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a user.
      tags:
      - userManagement
    get:
      description: Get a user with the given identifier from the organization.
      operationId: getUser
      parameters:
      - description: Identifier of user to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a user.
      tags:
      - userManagement
    put:
      description: |
        Update an existing user in the organization.
      operationId: updateUser
      parameters:
      - description: Identifier of the user to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDefinition'
        description: Information to update about the user.
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: The user was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a user.
      tags:
      - userManagement
components:
  schemas:
    CreateUserDefinition:
      example:
        firstName: John
        lastName: Doe
        roleIds:
        - roleIds
        - roleIds
        email: johndoe@acme.com
      properties:
        firstName:
          description: First name of the user.
          example: John
          maxLength: 128
          minLength: 1
          type: string
          x-tfType: TypeString
        lastName:
          description: Last name of the user.
          example: Doe
          maxLength: 128
          minLength: 0
          type: string
          x-tfType: TypeString
        email:
          description: Email address of the user.
          example: johndoe@acme.com
          format: email
          maxLength: 255
          type: string
          x-tfType: TypeString
          x-tf-resource-writeonly: true
        roleIds:
          description: List of roleIds associated with the user.
          items:
            type: string
          type: array
          x-tfType: TypeList
      required:
      - email
      - firstName
      - lastName
      - roleIds
      type: object
    User:
      allOf:
      - $ref: '#/components/schemas/CreateUserDefinition'
      - $ref: '#/components/schemas/Metadata'
      - $ref: '#/components/schemas/User_allOf'
      x-tf-resource: true
    UpdateUserDefinition:
      example:
        firstName: John
        lastName: Doe
        roleIds:
        - roleIds
        - roleIds
        isActive: true
      properties:
        firstName:
          description: First name of the user.
          example: John
          maxLength: 128
          minLength: 1
          type: string
        lastName:
          description: Last name of the user.
          example: Doe
          maxLength: 128
          minLength: 0
          type: string
        isActive:
          description: Is the user active.
          type: boolean
        roleIds:
          description: List of roleIds associated with the user.
          items:
            type: string
          type: array
      required:
      - firstName
      - isActive
      - lastName
      - roleIds
      type: object
    Metadata:
      properties:
        createdAt:
          description: Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)
            format.
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
      required:
      - createdAt
      - createdBy
      - modifiedAt
      - modifiedBy
      type: object
    ErrorDescription:
      properties:
        code:
          description: An error code describing the type of error.
          example: auth:password_too_short
          type: string
        message:
          description: A short English-language description of the error.
          example: Your password was too short.
          type: string
        detail:
          description: An optional fuller English-language description of the error.
          example: Your password was 5 characters long, the minimum length is 12 characters.  See
            http://example.com/password for more information.
          type: string
        meta:
          description: An optional list of metadata about the error.
          example:
            minLength: 12
            actualLength: 5
          properties: {}
          type: object
      required:
      - code
      - message
      type: object
    ErrorResponse:
      properties:
        id:
          description: An identifier for the error; this is unique to the specific
            API request.
          example: IUUQI-DGH5I-TJ045
          type: string
        errors:
          description: A list of one or more causes of the error.
          example:
          - code: auth:password_too_short
            message: Your password was too short.
          - code: auth:password_character_classes
            message: Your password did not contain any non-alphanumeric characters
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
      required:
      - errors
      - id
      type: object
    User_allOf:
      properties:
        id:
          description: Unique identifier for the user.
          type: string
          x-tf-resource-readonly: true
        isActive:
          description: Is the user active.
          type: boolean
          x-tf-resource-readonly: true
        isLocked:
          description: Is the user locked.
          type: boolean
          x-tf-resource-readonly: true
        lastLoginTimestamp:
          description: Timestamp of the last login for the user in UTC. Will be null
            if the user has never logged in.
          format: date-time
          type: string
          x-tf-resource-readonly: true
      required:
      - id
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
x-tf-object: User
